
import logging
from telebot import TeleBot
from database.db_manager import DatabaseManager
from utils.keyboards import main_menu

logger = logging.getLogger(__name__)

def calculate_daily_calories(age, height, weight, goal, activity_level):
    """–†–∞—Å—á—ë—Ç –¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã –∫–∞–ª–æ—Ä–∏–π."""
    bmr = 10 * weight + 6.25 * height - 5 * age + 5  # –î–ª—è –º—É–∂—á–∏–Ω (+5), –¥–ª—è –∂–µ–Ω—â–∏–Ω (-161)
    
    activity_multiplier = {
        '–ú–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π': 1.2,
        '–£–º–µ—Ä–µ–Ω–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã–π': 1.55,
        '–ê–∫—Ç–∏–≤–Ω—ã–π': 1.75,
        '–û—á–µ–Ω—å –∞–∫—Ç–∏–≤–Ω—ã–π': 2.0
    }.get(activity_level, 1.2)
    
    daily_calories = bmr * activity_multiplier
    
    if goal == '–ü–æ—Ö—É–¥–µ–Ω–∏–µ':
        daily_calories -= 500
    elif goal == '–ù–∞–±–æ—Ä –º–∞—Å—Å—ã':
        daily_calories += 500

    return int(daily_calories)

class ProgressHandler:
    def __init__(self, bot: TeleBot, db_manager: DatabaseManager):
        self.bot = bot
        self.db_manager = db_manager

    def show_progress(self, message):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        try:
            profile = self.db_manager.get_user_profile(message.from_user.id)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if not profile or len(profile) < 6:
                raise ValueError("–ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

            # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            age, height, weight, goal, daily_calories, activity_level = profile

            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º daily_calories, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            if not daily_calories:
                daily_calories = calculate_daily_calories(
                    age=age or 30,  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    height=height or 170,  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    weight=weight or 70,  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    goal=goal or '–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞',  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    activity_level=activity_level or '–ú–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π'  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                )
                self.db_manager.update_user_profile(message.from_user.id, 'daily_calories', daily_calories)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è
            goal_recommendation = {
                "–ü–æ—Ö—É–¥–µ–Ω–∏–µ": "–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è –¥–µ—Ñ–∏—Ü–∏—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º.",
                "–ù–∞–±–æ—Ä –º–∞—Å—Å—ã": "–î–ª—è –Ω–∞–±–æ—Ä–∞ –º–∞—Å—Å—ã –≤–∞–∂–Ω–æ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ø—Ä–æ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π –∏ —É–¥–µ–ª—è—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ —Å–∏–ª–æ–≤—ã–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º.",
                "–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞": "–î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤–µ—Å–∞ –≤–∞–∂–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º –∏ —Ä–∞—Å—Ö–æ–¥–æ–º –∫–∞–ª–æ—Ä–∏–π."
            }.get(goal, "–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –¥–∞–Ω–Ω–æ–π —Ü–µ–ª–∏.")

            profile_text = (
                f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
                f"–í–æ–∑—Ä–∞—Å—Ç: {age or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"–†–æ—Å—Ç: {height or '–ù–µ —É–∫–∞–∑–∞–Ω'} —Å–º\n"
                f"–í–µ—Å: {weight or '–ù–µ —É–∫–∞–∑–∞–Ω'} –∫–≥\n"
                f"–¶–µ–ª—å: {goal or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
                f"–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {activity_level or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n"
                f"–í–∞—à –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è:\n"
                f"–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π: {daily_calories or '–ù–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ'} –∫–∫–∞–ª/–¥–µ–Ω—å\n"
                f"{goal_recommendation}\n\n"
            )

            free_gens, total_gens = self.db_manager.check_user_generations(message.from_user.id)
            profile_text += (
                f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n"
                f"–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {free_gens}\n"
                f"–í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: {total_gens}\n"
            )

            self.bot.send_message(message.chat.id, profile_text, reply_markup=main_menu())

        except ValueError as ve:
            logger.error(f"–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è: {ve}")
            self.bot.send_message(
                message.chat.id,
                "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.",
                reply_markup=main_menu()
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")
            self.bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=main_menu()
            )

    def register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞."""
        @self.bot.message_handler(func=lambda message: message.text == "üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å")
        def progress(message):
            self.show_progress(message)

